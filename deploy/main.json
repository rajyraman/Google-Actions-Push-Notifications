{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "3268426457479669873"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "appNameSuffix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "standard",
        "premium"
      ]
    },
    "userId": {
      "type": "string"
    },
    "googleAccountEmail": {
      "type": "string"
    },
    "googleSecret": {
      "type": "secureString"
    }
  },
  "functions": [],
  "variables": {
    "functionAppName": "[format('fn-googleassistant-{0}', parameters('appNameSuffix'))]",
    "appServicePlanName": "[format('FunctionPlan-{0}', resourceGroup().location)]",
    "appInsightsName": "[format('AppInsights-{0}', parameters('appNameSuffix'))]",
    "storageAccountName": "[format('fnsto{0}', replace(parameters('appNameSuffix'), '-', ''))]",
    "functionRuntime": "dotnet",
    "keyVaultName": "[format('kv-func-{0}', parameters('appNameSuffix'))]",
    "functionAppKeySecretName": "GoogleKey",
    "roleArray": [
      "admin",
      "user"
    ],
    "rolesObject": "[json('{\r\n  \"admin\": {\r\n    \"roleId\": \"00482a5a-887f-4fb3-b363-3b7fe8e74483\"\r\n  },\r\n  \"user\": {\r\n    \"roleId\": \"4633458b-17de-408a-b874-0445c86b69e6\"\r\n  }\r\n}\r\n')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-01-15",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-15",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionRuntime')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "SERVICE_ACCOUNT_EMAIL",
              "value": "[parameters('googleAccountEmail')]"
            },
            {
              "name": "SERVICE_ACCOUNT_KEY",
              "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}.vault.azure.net/secrets/{1})', variables('keyVaultName'), variables('functionAppKeySecretName'))]"
            }
          ]
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableRbacAuthorization": true,
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('functionAppKeySecretName'))]",
      "properties": {
        "value": "[parameters('googleSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignment",
        "count": "[length(variables('roleArray'))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceGroup().id, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', format('{0}', variables('rolesObject')[variables('roleArray')[copyIndex()]].roleId)))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', format('{0}', variables('rolesObject')[variables('roleArray')[copyIndex()]].roleId))]",
        "principalId": "[if(equals(variables('roleArray')[copyIndex()], 'user'), reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-01-15', 'full').identity.principalId, parameters('userId'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostName]"
    },
    "functionName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}